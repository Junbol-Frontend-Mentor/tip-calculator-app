// Importing Google Fonts
@import url('https://fonts.googleapis.com/css2?family=Space+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap');

//------GENERAL SETTINGS -------------------------------

// Universal reset also explicitly to all pseudo-elements
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body section,
header {
  padding: 0;
  margin: 0;
}

// Define color variables
$colors: (
  //--------PRIMARY-----------------------------------
  'strong-cyan': hsl(172, 67%, 45%),
  'lighter-strong-cyan': hsl(172, 90%, 62%),
  //--------NEUTRAL    ----------------------------
  'very-dark-cyan': hsl(183, 100%, 15%),
  'dark-grayish-cyan': hsl(186, 14%, 43%),
  'grayish-cyan': hsl(184, 14%, 56%),
  'light-grayish-cyan': hsl(185, 41%, 84%),
  'very-light-grayish-cyan': hsl(189, 41%, 97%),
  //--------STANDARD -----------------------------------
  'white': hsl(0, 0%, 100%),
  'grey': hsl(0, 0%, 50%),
  'black': hsl(0, 0%, 0%)
);

// Function to retrieve colors
@function color($color-name) {
  @return map-get($colors, $color-name);
}

// Typography Mixin with parameters
@mixin typography($weight, $size, $line-height, $color) {
  font-family: 'Space Mono', monospace;
  font-weight: $weight;
  font-size: $size;
  line-height: $line-height;
  color: $color;
}

/* QUERY FOR MOBILE FIRST */
html,
body {
  width: 100vw;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  align-items: center;
  background-color: color('light-grayish-cyan');
}

main {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  //background-color: aqua;
}

.container {
  width: 100%;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  //justify-content:center;
  //background-color: burlywood;
}

.logo {
  width: 10rem;
  display: flex;
  flex-direction: column;
  margin-top: 2rem;
  margin-bottom: 2rem;
  //background-color: red;
}

.calculator {
  width: 100%;
  min-height: 100%; /* Use min-height to accommodate varying content sizes */
  display: flex;
  flex-direction: column;
  //justify-content: space-around;
  margin-top: 1rem;
  border-radius: 20px 20px 0px 0px;
  padding: 1.5rem;
  background-color: color('white');
  //background-color: chartreuse;

  p {
    @include typography(400, 1.5rem, 0.5, color('white'));
    margin-top: 0.5rem;
    margin-bottom: 1.5rem;
  }

  h2 {
    @include typography(500, 2rem, 0.5, color('white'));
  }

  &__leftPanel-grp {
    width: 100%;
    height: 28rem;
    display: flex;
    flex-direction: column;
    margin-bottom: 1rem;
    //background-color: rgb(138, 226, 138);
  }

  .input-grp {
    width: 100%;
    height: 5rem;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    padding: 1rem 0;
    margin-bottom: 2rem;
    //background-color: coral; /* For testing purposes */
    &__label {
      @include typography(600, 1.2rem, 0.5, color('strong-cyan'));
      margin-bottom: 1rem;
    }
    &__input {
      width: 100%;
      height: 3rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-radius: 3px;
      padding: 0.5rem;
      margin-bottom: 3rem;
      background-color: color('very-light-grayish-cyan');
    }
    &__dollar-sign {
      width: 1rem;
      height: 1rem;
      @include typography(600, 1rem, 0.5, color('very-dark-cyan'));
      //background-color: aqua;
    }
    &__inputField {
      width: 4rem;
      height: 1rem;
      flex-grow: 1; // ‚úÖ Use flex-grow to make the input take up remaining space
      border: none; // ‚úÖ Remove default border
      text-align: right; // üü¢ Align text to the right
      background-color: transparent; // ‚úÖ Ensure background is transparent
      @include typography(700, 1.3rem, 0.5, color('very-dark-cyan'));
      // ‚úÖ Remove the spin buttons for number input fields
      appearance: none; // ‚úÖ Remove default styling for most browsers
      -moz-appearance: textfield; // ‚úÖ Remove default styling for Firefox
      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none; // ‚úÖ Remove default styling for WebKit browsers
        margin: 0;
        //background-color: red; /* For testing purposes */
      }
      &:focus {
        outline: none; // ‚úÖ Remove default outline on focus
        border: none; // ‚úÖ Ensure no border on focus
      }
    }
  }

  .tip-buttons-grp {
    width: 100%;
    height: 14rem;
    display: flex;
    flex-direction: column;
    //background-color: rgb(187, 211, 145);
    margin-bottom: 2rem;
    padding-top: 1rem;
    &__label {
      @include typography(600, 1.2rem, 0.5, color('strong-cyan'));
      margin-bottom: 1rem;
    }

    /* üö©Grid Column Distribution: The width of the buttons is controlled by the grid layout using grid-template-columns: repeat(3, 1fr);. This ensures that each button takes up an equal fraction of the available space in each row.
      Responsive Sizing: By not setting the width to 100%, the buttons can automatically resize based on the width of the container, maintaining equal spacing between them. 
      Grid Cell Alignment: Setting the height of the buttons to 100% ensures that each button takes the full height of its grid cell, which is defined by the grid-template-rows property. 
      Consistent Vertical Gaps: This guarantees that the vertical gaps between the buttons are consistent and match the horizontal gaps. */
    &__buttons-grp {
      width: 100%;
      display: grid; /* ‚úÖ Use Grid layout */
      grid-template-columns: repeat(3, 1fr); /* ‚úÖ Three columns */
      grid-template-rows: repeat(2, 3rem); /* ‚úÖ Two rows with consistent height */
      gap: 0.7rem; /* ‚úÖ Set the gap for both rows and columns */
      //background-color: blueviolet; /* For testing purposes */
    }

    &__tipBtn {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      @include typography(600, 1.2rem, 0.5, color('white'));
      border-radius: 5px;
      background-color: color('very-dark-cyan');
      cursor: pointer;
      border-style: none;
      transition: transform 0.7s ease;
      &:hover {
        color: color('white');
        background-color: color('lighter-strong-cyan');
      }
    }
    &__active {
      background-color: color('strong-cyan');
      color: color('white');
    }
  }

  .results-grp {
    width: 100%;
    height: 25rem;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    padding: 2rem 1rem;
    margin-top: 1rem;
    margin-bottom: 1rem;
    border-radius: 15px;
    background-color: color('very-dark-cyan');
    //background-color: fuchsia; /* For testing purposes */
    &__row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 1rem;
    }
    &__amount-grp {
      width: 10rem;
      height: 4rem;
      display: flex;
      flex-direction: column;
      justify-content: center;
      //background-color: deeppink;
    }
    &__title {
      width: 10rem;
      height: 3rem;
      @include typography(600, 1.3rem, 0.5, color('white'));
      margin-bottom: 0.2rem;
      //background-color: darkseagreen; /* For testing purposes */
    }
    &__p {
      @include typography(400, 1rem, 0.5, color('white'));
    }
    &__totals {
      width: 9rem;
      display: flex;
      position: relative;
      justify-content: right;
      padding-top: 0.5rem;
      @include typography(600, 1.7rem, 0.5, color('strong-cyan'));
      //background-color: darkgreen;
      &::before {
        content: '$';
        left: 0; /* Adjust as needed */
      }
    }

    &__reset-btn {
      width: 15rem;
      height: 3rem;
      @include typography(600, 1.2rem, 0.5, color('very-dark-cyan'));
      //border-style: none;
      border-radius: 5px;
      background-color: color('strong-cyan');
      cursor: pointer;
      border-style: none;
      margin: 0 auto;
      transition: transform 0.7s ease;
      margin-bottom: 0.5rem;
      transition: transform 0.7s ease;
      &:hover {
        //üö©rembember how to nest hovers with &
        background-color: color('lighter-strong-cyan');
        transform: scale(1.05);
      }
    }
  }
}

// ------- MAGIC ----------------------------

//------   FOOTER    ----------------

.attribution {
  width: 100%;
  display: flex;
  justify-content: center;
  margin-top: 2rem;
  margin-bottom: 3rem; /* Keeps the footer at the bottom but only after all other content */
  color: color('grey');
}
.attribution a {
  color: color('white');
  text-decoration: none;
}

//------ MEDIA QUERY FOR DESKTOPS AND TABLETS ----------------

/* Media Query for Desktops and Tablets */
@media (min-width: 768px) {
  main {
    margin-top: 3rem;
  }

  .container {
    width: 60rem;

    //flex-direction: row;
  }

  .calculator {
    min-height: 28rem;
    flex-direction: row;
    justify-content: space-between;
    border-radius: 20px 20px 20px 20px;
    //flex: 1;
    &__leftPanel-grp {
      width: 30rem;
      height: 28rem;
      display: flex;
      margin-right: 2rem;
      margin-bottom: 1rem;
      //background-color: rgb(138, 226, 138);
    }
  }

  .calculator .results-grp {
    //üêûüö©‚úÖ A single class selector (e.g., .results-grp) has a lower specificity compared to a nested selector (e.g., .calculator .results-grp). By adding .calculator .results-grp, you increased the specificity, ensuring it overrides the mobile-first styles.
    width: 30rem;
    //background-color: brown; /* For testing purposes */
  }

  .attribution {
    grid-area: footer; // Assigns the footer to the 'footer' area
  }
}

/////// -------- NOTES --------------------//////////
///
/* 
 */

///////--------   TOOLS ------------------- ////////////
//üõ†

/* transition: transform 0.5s ease;
&:hover {
  color: color('soft-magenta'); 
  transform: scale(1.2);
}  */
